package reviewWeek6;

public class BinaryTree {
	
	public static void main(String [] args) {
		
		BTree tree =  makeTree();
		
		
		solve(tree);
		
		
		
		
	}
	
	static BTree makeTree() {
		
	BTree c2 = new BTree(null, null, false, "C2");
	BTree c3 = new BTree(null, null, false, "C3");
	BTree c4 = new BTree(null, null, false, "C4");
	BTree c1 = new BTree(c3,c4, false, "C1");
	BTree C = new BTree(c1,c2, false,"C");
	
	return C;	
	}
	
	static Boolean solve(BTree n) {
		if (n.leftN == null && n.rightN == null) {
			if (n.isGoalNode == true) {
				return true;
			}
			else {
				return false;
			}
		}
			else {
				if (solve(n.leftN) == true){
					return true;
				}
				if (solve(n.rightN) == true){
					return true;
				}
				else {
					return false;
				}
			}
	}
	}
	
	



class BTree{
	
	BTree leftN = null;
	BTree rightN = null;
	
	Boolean isGoalNode = false;
	String name;
	public BTree(BTree leftN, BTree rightN, Boolean isGoalNode, String name) {
		this.leftN = leftN;
		this.rightN = rightN;
		this.isGoalNode = isGoalNode;
		this.name = name;
	}	
}
